// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/Klinisia/backend-ksi/src/auth/v1/domain"
	dto "github.com/Klinisia/backend-ksi/src/auth/v1/dto"

	mock "github.com/stretchr/testify/mock"

	shared "github.com/Klinisia/backend-ksi/src/shared"
)

// AuthRepository is an autogenerated mock type for the AuthRepository type
type AuthRepository struct {
	mock.Mock
}

// CheckUserDelete provides a mock function with given fields: _a0
func (_m *AuthRepository) CheckUserDelete(_a0 *dto.LoginByPhoneRequest) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*dto.LoginByPhoneRequest) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// CheckUserExist provides a mock function with given fields: _a0
func (_m *AuthRepository) CheckUserExist(_a0 *dto.LoginByPhoneRequest) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*dto.LoginByPhoneRequest) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// CountSms provides a mock function with given fields: _a0
func (_m *AuthRepository) CountSms(_a0 string) int {
	ret := _m.Called(_a0)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// FindBySecPatientSignInOtp provides a mock function with given fields: _a0
func (_m *AuthRepository) FindBySecPatientSignInOtp(_a0 *dto.LoginByPhoneOtpRequest) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*dto.LoginByPhoneOtpRequest) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// GetSecUserByID provides a mock function with given fields: _a0
func (_m *AuthRepository) GetSecUserByID(_a0 string) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(string) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// GetSmsLog provides a mock function with given fields: _a0
func (_m *AuthRepository) GetSmsLog(_a0 string) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(string) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// LoadActiveSecPatient provides a mock function with given fields: _a0
func (_m *AuthRepository) LoadActiveSecPatient(_a0 string) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(string) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// LoginByPhone provides a mock function with given fields: _a0
func (_m *AuthRepository) LoginByPhone(_a0 *dto.LoginByPhoneRequest) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*dto.LoginByPhoneRequest) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// LoginByPhoneOtp provides a mock function with given fields: _a0
func (_m *AuthRepository) LoginByPhoneOtp(_a0 *dto.LoginByPhoneOtpRequest) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*dto.LoginByPhoneOtpRequest) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// SavePatientOtpSignIn provides a mock function with given fields: _a0
func (_m *AuthRepository) SavePatientOtpSignIn(_a0 *domain.SecPatientSignInOtp) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*domain.SecPatientSignInOtp) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// SaveSmsLogMessages provides a mock function with given fields: _a0
func (_m *AuthRepository) SaveSmsLogMessages(_a0 *domain.SmsLogMessage) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*domain.SmsLogMessage) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// SaveSmsLogs provides a mock function with given fields: _a0
func (_m *AuthRepository) SaveSmsLogs(_a0 *domain.SmsLog) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*domain.SmsLog) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// UpdatePatientOtpSignIn provides a mock function with given fields: _a0
func (_m *AuthRepository) UpdatePatientOtpSignIn(_a0 *domain.SecPatientSignInOtp) shared.Output {
	ret := _m.Called(_a0)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(*domain.SecPatientSignInOtp) shared.Output); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}
