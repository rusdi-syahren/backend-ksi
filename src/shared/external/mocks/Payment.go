// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	external "github.com/rusdi-syahren/backend-ksi/src/shared/external"
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"

	shared "github.com/rusdi-syahren/backend-ksi/src/shared"
)

// Payment is an autogenerated mock type for the Payment type
type Payment struct {
	mock.Mock
}

// Charge provides a mock function with given fields: _a0, _a1
func (_m *Payment) Charge(_a0 echo.Context, _a1 interface{}) shared.Output {
	ret := _m.Called(_a0, _a1)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(echo.Context, interface{}) shared.Output); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// CheckStatusPayment provides a mock function with given fields: _a0, _a1
func (_m *Payment) CheckStatusPayment(_a0 echo.Context, _a1 string) shared.Output {
	ret := _m.Called(_a0, _a1)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(echo.Context, string) shared.Output); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}

// GetToken provides a mock function with given fields: _a0, _a1
func (_m *Payment) GetToken(_a0 echo.Context, _a1 external.TokenParams) shared.Output {
	ret := _m.Called(_a0, _a1)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(echo.Context, external.TokenParams) shared.Output); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}
