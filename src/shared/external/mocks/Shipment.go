// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	external "github.com/Klinisia/backend-ksi/src/shared/external"
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"

	shared "github.com/Klinisia/backend-ksi/src/shared"
)

// Shipment is an autogenerated mock type for the Shipment type
type Shipment struct {
	mock.Mock
}

// GetCity provides a mock function with given fields: _a0, _a1
func (_m *Shipment) GetCity(_a0 echo.Context, _a1 *external.ShipmentCost) (interface{}, error) {
	ret := _m.Called(_a0, _a1)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(echo.Context, *external.ShipmentCost) interface{}); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(echo.Context, *external.ShipmentCost) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetProvice provides a mock function with given fields: _a0, _a1
func (_m *Shipment) GetProvice(_a0 echo.Context, _a1 *external.ShipmentCost) (interface{}, error) {
	ret := _m.Called(_a0, _a1)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(echo.Context, *external.ShipmentCost) interface{}); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(echo.Context, *external.ShipmentCost) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetShipmentCost provides a mock function with given fields: _a0, _a1
func (_m *Shipment) GetShipmentCost(_a0 echo.Context, _a1 *external.ShipmentCost) shared.Output {
	ret := _m.Called(_a0, _a1)

	var r0 shared.Output
	if rf, ok := ret.Get(0).(func(echo.Context, *external.ShipmentCost) shared.Output); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(shared.Output)
	}

	return r0
}
